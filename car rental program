import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

// Car class
class Car {
    private String make;
    private String model;
    private String size;
    private double pricePerDay;
    private boolean available;

    public Car(String make, String model, String size, double pricePerDay) {
        this.make = make;
        this.model = model;
        this.size = size;
        this.pricePerDay = pricePerDay;
        this.available = true;
    }

    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public String getSize() {
        return size;
    }

    public double getPricePerDay() {
        return pricePerDay;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }
}

// Customer class
class Customer {
    private String name;
    private String email;
    private List<Rental> rentals;

    public Customer(String name, String email) {
        this.name = name;
        this.email = email;
        this.rentals = new ArrayList<>();
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }

    public List<Rental> getRentals() {
        return rentals;
    }

    public void addRental(Rental rental) {
        rentals.add(rental);
    }
}

// Rental class
class Rental {
    private Car car;
    private int numDays;
    private double totalCost;

    public Rental(Car car, int numDays) {
        this.car = car;
        this.numDays = numDays;
        this.totalCost = car.getPricePerDay() * numDays;
    }

    public Car getCar() {
        return car;
    }

    public int getNumDays() {
        return numDays;
    }

    public double getTotalCost() {
        return totalCost;
    }
}

// CarRentalSystem class
public class CarRentalSystem {
    private Map<String, Car> cars;
    private List<Customer> customers;
    private List<Rental> rentals;

    public CarRentalSystem() {
        this.cars = new HashMap<>();
        this.customers = new ArrayList<>();
        this.rentals = new ArrayList<>();
    }

    public void addCar(String make, String model, String size, double pricePerDay) {
        String key = make + " " + model;
        Car car = new Car(make, model, size, pricePerDay);
        cars.put(key, car);
    }

    public void addCustomer(String name, String email) {
        Customer customer = new Customer(name, email);
        customers.add(customer);
    }

    public void rentCar(String customerName, String carMakeModel, int numDays) {
        Customer customer = findCustomer(customerName);
        String key = carMakeModel;
        Car car = cars.get(key);

        if (customer != null && car != null && car.isAvailable()) {
            Rental rental = new Rental(car, numDays);
            rentals.add(rental);
            customer.addRental(rental);
            car.setAvailable(false);
            System.out.printf("Rented a %s %s for %d days. Total cost: $%.2f\n", car.getMake(), car.getModel(), numDays, rental.getTotalCost());
        } else {
            System.out.printf("Sorry, we don't have a %s available.\n", carMakeModel);
        }
    }

    private Customer findCustomer(String name) {
        for (Customer customer : customers) {
            if (customer.getName().equals(name)) {
                return customer;
            }
        }
        return null;
    }

    public static void main(String[] args) {
        CarRentalSystem rentalSystem = new CarRentalSystem();
        rentalSystem.addCar("Toyota", "Corolla", "Small", 50.0);
        rentalSystem.addCar("Honda", "Civic", "Small", 55.0);
        rentalSystem.addCar("Ford", "Fusion", "Medium", 75.0);
        rentalSystem.addCar("Chevrolet", "Impala", "Large", 100.0);

        rentalSystem.addCustomer("John Doe", "john.doe@example.com");
        rentalSystem.addCustomer("Jane Smith", "jane.smith@example.com");

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.print("Enter customer name and car make/model (or 'exit' to quit): ");
            String input = scanner.nextLine();
            if (input.equalsIgnoreCase("exit")) {
                break;
            }
            String[] parts = input.split(" ");
            if (parts.length != 3) {
                System.out.println("Invalid input. Please try again.");
                continue;
            }
            String customerName = parts[0];
            String carMakeModel = parts[1] + " " + parts[2];
            System.out.print("Enter number of rental days: ");
            int numDays = scanner.nextInt();
            scanner.nextLine(); // Consume newline character
            rentalSystem.rentCar(customerName, carMakeModel, numDays);
        }
        System.out.println("Thank you for using the Car Rental System!");
    }
}
